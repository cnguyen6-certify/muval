plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group = 'com.github.rahulsom' // This could become 'gov.nist'
version = '1.0-SNAPSHOT'

mainClassName = "gov.nist.mu.validation.Validator"

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/src/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'build/generated/resources'
        }
    }
}


repositories {
    jcenter()
}

Map<String, String> xmlbeans(String subproject = null) {
    [group: 'org.apache.xmlbeans', name: subproject ? "xmlbeans-$subproject" : 'xmlbeans', version: '2.4.0']
}

Map<String, String> saxon(String subproject = null) {
    [group: 'net.sourceforge.saxon', name: 'saxon', version: '9.1.0.8', classifier: subproject]
}

dependencies {
    compile 'commons-cli:commons-cli:1.0'
    compile 'javax.xml.bind:jsr173_api:1.0'
    compile 'org.dspace.xmlui.xml:xml-commons-resolver:1.1'

    compile saxon()
    compile saxon('dom')
    compile saxon('dom4j')
    compile saxon('jdom')
    compile saxon('s9api')
    compile saxon('sql')
    compile saxon('xom')
    compile saxon('xqj')

    compile xmlbeans()
    compile(xmlbeans('xpath')) {
        exclude group: 'net.sf.saxon'
    }
    compile xmlbeans('qname')
    compile xmlbeans('xmlpublic')

    testCompile 'org.codehaus.groovy:groovy-all:2.4.4'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
}

def rulesets = [
        [name: 'Ccd', dir: 'ccd', file: 'ccd.sch'],
        [name: 'Cda4Cdt', dir: 'cda4cdt', file: 'HandP.IHE.PCC.sch'],
        [name: 'C32_V25_C83_20', dir: 'c32_v_2_5_c83_2_0', file: 'HITSP_C32.sch'],
]
rulesets.each { ruleset ->
    task "create_${ruleset.name}"(type: Zip) {
        from "schematron/${ruleset.dir}"
        //include "**/*.*"
        destinationDir file('build/generated/resources/schematron')
        archiveName ruleset.name
    }
}

task "create_stylesheet"(type: Zip) {
    from "schematron"
    include "*.xsl"
    destinationDir file('build/generated/resources/schematron')
    archiveName "stylesheet"
}

task "create_schema"(type: Zip) {
    from "schema/cdar2c32"
    destinationDir file('build/generated/resources/schematron')
    archiveName "schema"
}

task packageRules() {
    dependsOn rulesets*.name.collect { "create_${it}" }
    dependsOn 'create_stylesheet', 'create_schema'
    doLast {
        file('build/generated/src/java/gov/nist/mu/validation').mkdirs()
        def fileBody = 'package gov.nist.mu.validation;\nclass Rulesets {\n' + rulesets.
                collect {
                    $/    public static final Ruleset ${it.name} = new Ruleset("${it.name}", "${it.file}");/$
                }.join('\n') +
                "\n}\n"
        file('build/generated/src/java/gov/nist/mu/validation/Rulesets.java').text = fileBody
    }
}

compileJava.dependsOn 'packageRules'

publishing {
    publications {
        shadow(MavenPublication) {
            from components.java
            artifact shadowJar
        }
    }
}