<!-- These schematron rules are written for the "IHE Laboratory Technical Framework Volume3 (LAB TF-3) August 08, 2008". 
2.3.3.22 Laboratory Provider 1.3.6.1.4.1.19376.1.3.3.1.7.
 -->
 <pattern id='p-1.3.6.1.4.1.19376.1.3.3.1.7-errors'>

 <rule context='*[cda:templateId/@root="1.3.6.1.4.1.19376.1.3.3.1.7"]'>

   <!-- Verify that templateId is used on the appropriate type of object -->
   <assert test='ancestor::cda:documentationOf and
             parent::cda:serviceEvent
             and self::cda:performer'>
     Error: The templateId  (1.3.6.1.4.1.19376.1.3.3.1.7) is a child element of documentationOf/serviceEvent/performer. The templateId identifies this preformer as a laboratory performer.
   </assert> 

     <assert test='self::cda:performer/cda:time'>
      Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the time element shall be present.
   </assert>
   <assert test='self::cda:performer/cda:assignedEntity/cda:addr'>Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/assigenedEntity/addr element shall be present.</assert>
   <assert test='self::cda:performer/cda:assignedEntity/cda:telecom'>Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/assignedEntity/telecom shall be present.</assert>
   
   <assert test='self::cda:performer/cda:assignedEntity/cda:assignedPerson/cda:name'>
      Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/assignedPerson/name element shall be present.
   </assert>
   
   <!-- These rules are in accordance with 2.3.3.1 - The general constraints applied to organizations when a receivedOrganization is present -->
  
   <assert test='not(self::cda:performer/cda:assignedEntity/cda:representedOrganization) or 
                 self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:name'>
      Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the participant/associatedEntity/scopingOrganization/name element shall be present.
   </assert>
 
   <assert test='not(self::cda:performer/cda:assignedEntity/cda:representedOrganization) or 
                 self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:telecom'>
      Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/representedOrganization/telecom element shall be present.
   </assert>
 
   <assert test='not(self::cda:performer/cda:assignedEntity/cda:representedOrganization) or 
                self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:addr'>
      Error: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/representedOrganization/addr element shall be present.
   </assert>

 </rule>
</pattern>

<pattern id='p-1.3.6.1.4.1.19376.1.3.3.1.7-warning'>

  <rule context='*[cda:templateId/@root="1.3.6.1.4.1.19376.1.3.3.1.7"]'>
<!-- checking for addr, telecom or name for values -->
   
   <assert test='(self::cda:performer/cda:assignedEntity/cda:addr) and (normalize-space(self::cda:performer/cda:assignedEntity/cda:addr) 
            or count(self::cda:performer/cda:assignedEntity/cda:addr/child::*) &gt; 0)
            or (self::cda:performer/cda:assignedEntity/cda:addr/@nullFlavor)'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) the performer/assignedEntity should have a non-blank addr element or nullFlavor.</assert>    
    
   <assert test='(self::cda:performer/cda:assignedEntity/cda:telecom/@value) and normalize-space(self::cda:performer/cda:assignedEntity/cda:telecom/@value)
            or (self::cda:performer/cda:assignedEntity/cda:telecom/@nullFlavor)'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) a performer/assignedEntity/telecom/@value should have a non-blank value or nullFlavor.</assert>      
   
   <assert test='(self::cda:performer/cda:assignedEntity/cda:assignedPerson/cda:name) and (normalize-space(self::cda:performer/cda:assignedEntity/cda:assignedPerson/cda:name) 
           or count(self::cda:performer/cda:assignedEntity/cda:assignedPerson/cda:name/child::*) &gt; 0)
           or (self::cda:performer/cda:assignedEntity/cda:assignedPerson/cda:name/@nullFlavor)'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) a performer/assignedEntity should have a non-blank name element or nullFlavor.</assert>
      
<!-- check for  name  in element representedOrganization -->
     
     <assert test='(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:addr) 
           and (normalize-space(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:addr) 
           or count(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:addr/child::*) &gt; 0)
           or self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:addr/@nullFlavor'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) a performer/assignedEntity/representedOrganization should have a non-blank addr element or nullFlavor.</assert>
   
     <assert test='(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:telecom/@value) 
           and normalize-space(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:telecom/@value) 
           or self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:telecom/@nullFlavor'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) a performer/assignedEntity/representedOrganization/telecom/@value should have a non-blank value or nullFlavor.</assert>
   
     <assert test='(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:name) 
           and (normalize-space(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:name) 
           or count(self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:name/child::*) &gt; 0)
           or self::cda:performer/cda:assignedEntity/cda:representedOrganization/cda:name/@nullFlavor'>
           Warning: In Laboratory Performer (1.3.6.1.4.1.19376.1.3.3.1.7) a performer/assignedEntity/representedOrganization should have a non-blank name element or nullFlavor.</assert>
   
  </rule> 
  
 </pattern>  